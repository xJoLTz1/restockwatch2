name: Restock Watch (continuous)

on:
  workflow_dispatch: {}

permissions:
  contents: read
  issues: write

concurrency:
  group: restockwatch-continuous
  cancel-in-progress: true

jobs:
  watch:
    runs-on: self-hosted
    timeout-minutes: 4320

    # Use Windows PowerShell for all steps in this job
    defaults:
      run:
        shell: powershell

    env:
      # Update this if your Python lives elsewhere
      PYPATH: C:\Program Files\Python311\python.exe
      # Persist browsers between runs (optional but nice for speed)
      PLAYWRIGHT_BROWSERS_PATH: E:\actions-runner\pw-browsers

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Verify Python
        run: |
          if (-not (Test-Path "${env:PYPATH}")) {
            Write-Error "Python not found at ${env:PYPATH}. Update PYPATH in workflow env."
            exit 1
          }
          & "${env:PYPATH}" -V

      - name: Upgrade pip + install deps
        run: |
          & "${env:PYPATH}" -m pip install --upgrade pip
          & "${env:PYPATH}" -m pip install -r requirements.txt
          # Playwright Python package
          & "${env:PYPATH}" -m pip install playwright

      - name: Install Playwright browsers (Chromium)
        run: |
          New-Item -ItemType Directory -Force -Path "${env:PLAYWRIGHT_BROWSERS_PATH}" | Out-Null
          & "${env:PYPATH}" -m playwright install chromium

      - name: Loop every 60s
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
          PUSHOVER_USER:  ${{ secrets.PUSHOVER_USER }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
          PYPATH: C:\Program Files\Python311\python.exe
          PLAYWRIGHT_BROWSERS_PATH: E:\actions-runner\pw-browsers
          PC_HEADED: "1"
          DEBUG_PC_DUMP: "1"
          PC_BLOCK_CHALLENGE_JS: "0"
        run: |
          while ($true) {
            Write-Host "=== $(Get-Date) ==="
            & "${env:PYPATH}" watcher.py
            Start-Sleep -Seconds 60
          }
